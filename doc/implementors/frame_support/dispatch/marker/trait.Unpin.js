(function() {var implementors = {};
implementors["frame_support"] = [{"text":"impl Unpin for RuntimeLogger","synthetic":true,"types":[]},{"text":"impl Unpin for KillOutcome","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StorageIterator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, T, H&gt; Unpin for StorageKeyIterator&lt;K, T, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Prefix, Value, QueryKind, OnEmpty&gt; Unpin for StorageValue&lt;Prefix, Value, QueryKind, OnEmpty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnEmpty: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prefix: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;QueryKind: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Value: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty&gt; Unpin for StorageMap&lt;Prefix, Hasher, Key, Value, QueryKind, OnEmpty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Hasher: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Key: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;OnEmpty: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prefix: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;QueryKind: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Value: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind, OnEmpty&gt; Unpin for StorageDoubleMap&lt;Prefix, Hasher1, Key1, Hasher2, Key2, Value, QueryKind, OnEmpty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Hasher1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Hasher2: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Key1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Key2: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;OnEmpty: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prefix: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;QueryKind: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Value: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for OptionQuery","synthetic":true,"types":[]},{"text":"impl Unpin for ValueQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PrefixIterator&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Identity","synthetic":true,"types":[]},{"text":"impl Unpin for Twox64Concat","synthetic":true,"types":[]},{"text":"impl Unpin for Blake2_128Concat","synthetic":true,"types":[]},{"text":"impl Unpin for Blake2_128","synthetic":true,"types":[]},{"text":"impl Unpin for Blake2_256","synthetic":true,"types":[]},{"text":"impl Unpin for Twox128","synthetic":true,"types":[]},{"text":"impl Unpin for Twox256","synthetic":true,"types":[]},{"text":"impl&lt;BlockNumber&gt; Unpin for DispatchTime&lt;BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Unpin for FilterStackGuard&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Unpin for ClearFilterGuard&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as FilterStack&lt;T&gt;&gt;::Stack: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, L, K, T&gt; Unpin for StorageMapShim&lt;S, L, K, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ExistenceRequirement","synthetic":true,"types":[]},{"text":"impl&lt;B, P&gt; Unpin for SignedImbalance&lt;B, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as Imbalance&lt;B&gt;&gt;::Opposite: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Balance, Imbalance, Part1, Target1, Part2, Target2&gt; Unpin for SplitTwoWays&lt;Balance, Imbalance, Part1, Target1, Part2, Target2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Imbalance: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Part1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Part2: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Target1: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Target2: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BalanceStatus","synthetic":true,"types":[]},{"text":"impl Unpin for WithdrawReasons","synthetic":true,"types":[]},{"text":"impl Unpin for TestRandomness","synthetic":true,"types":[]},{"text":"impl Unpin for CallMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for GetDefault","synthetic":true,"types":[]},{"text":"impl Unpin for U128CurrencyToVote","synthetic":true,"types":[]},{"text":"impl Unpin for SaturatingCurrencyToVote","synthetic":true,"types":[]},{"text":"impl Unpin for PalletVersion","synthetic":true,"types":[]},{"text":"impl Unpin for BlockExecutionWeight","synthetic":true,"types":[]},{"text":"impl Unpin for ExtrinsicBaseWeight","synthetic":true,"types":[]},{"text":"impl Unpin for RocksDbWeight","synthetic":true,"types":[]},{"text":"impl Unpin for ParityDbWeight","synthetic":true,"types":[]},{"text":"impl Unpin for FrameTransactionPriority","synthetic":true,"types":[]},{"text":"impl Unpin for Pays","synthetic":true,"types":[]},{"text":"impl Unpin for DispatchClass","synthetic":true,"types":[]},{"text":"impl Unpin for DispatchInfo","synthetic":true,"types":[]},{"text":"impl Unpin for PostDispatchInfo","synthetic":true,"types":[]},{"text":"impl&lt;WD, CD, PF&gt; Unpin for FunctionOf&lt;WD, CD, PF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CD: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;PF: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;WD: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RuntimeDbWeight","synthetic":true,"types":[]},{"text":"impl&lt;Balance&gt; Unpin for WeightToFeeCoefficient&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IdentityFee&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PerDispatchClass&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Instance0","synthetic":true,"types":[]},{"text":"impl Unpin for Instance1","synthetic":true,"types":[]},{"text":"impl Unpin for Instance2","synthetic":true,"types":[]},{"text":"impl Unpin for Instance3","synthetic":true,"types":[]},{"text":"impl Unpin for Instance4","synthetic":true,"types":[]},{"text":"impl Unpin for Instance5","synthetic":true,"types":[]},{"text":"impl Unpin for Instance6","synthetic":true,"types":[]},{"text":"impl Unpin for Instance7","synthetic":true,"types":[]},{"text":"impl Unpin for Instance8","synthetic":true,"types":[]},{"text":"impl Unpin for Instance9","synthetic":true,"types":[]},{"text":"impl Unpin for Instance10","synthetic":true,"types":[]},{"text":"impl Unpin for Instance11","synthetic":true,"types":[]},{"text":"impl Unpin for Instance12","synthetic":true,"types":[]},{"text":"impl Unpin for Instance13","synthetic":true,"types":[]},{"text":"impl Unpin for Instance14","synthetic":true,"types":[]},{"text":"impl Unpin for Instance15","synthetic":true,"types":[]},{"text":"impl Unpin for Never","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()