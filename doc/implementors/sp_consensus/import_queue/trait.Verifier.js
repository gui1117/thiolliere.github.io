(function() {var implementors = {};
implementors["sc_consensus_aura"] = [{"text":"impl&lt;B:&nbsp;BlockT, C, P, CAW&gt; Verifier&lt;B&gt; for AuraVerifier&lt;C, P, CAW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ProvideRuntimeApi&lt;B&gt; + Send + Sync + AuxStore + ProvideCache&lt;B&gt; + BlockOf,<br>&nbsp;&nbsp;&nbsp;&nbsp;C::Api: BlockBuilderApi&lt;B&gt; + AuraApi&lt;B, &lt;P as Pair&gt;::Public&gt; + ApiExt&lt;B, Error = Error&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DigestItemFor&lt;B&gt;: CompatibleDigestItem&lt;P&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Pair + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;P::Public: Send + Sync + Hash + Eq + Clone + Decode + Encode + Debug + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;P::Signature: Encode + Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CAW: CanAuthorWith&lt;B&gt; + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sc_consensus_babe"] = [{"text":"impl&lt;Block, Client, SelectChain, CAW&gt; Verifier&lt;Block&gt; for BabeVerifier&lt;Block, Client, SelectChain, CAW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Block: BlockT,<br>&nbsp;&nbsp;&nbsp;&nbsp;Client: HeaderMetadata&lt;Block, Error = Error&gt; + HeaderBackend&lt;Block&gt; + ProvideRuntimeApi&lt;Block&gt; + Send + Sync + AuxStore + ProvideCache&lt;Block&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Client::Api: BlockBuilderApi&lt;Block, Error = Error&gt; + BabeApi&lt;Block, Error = Error&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;SelectChain: SelectChain&lt;Block&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;CAW: CanAuthorWith&lt;Block&gt; + Send + Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sc_consensus_pow"] = [{"text":"impl&lt;B:&nbsp;BlockT, Algorithm&gt; Verifier&lt;B&gt; for PowVerifier&lt;B, Algorithm&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Algorithm: PowAlgorithm&lt;B&gt; + Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Algorithm::Difficulty: 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sc_network_test"] = [{"text":"impl&lt;B:&nbsp;BlockT&gt; Verifier&lt;B&gt; for PassThroughVerifier","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()